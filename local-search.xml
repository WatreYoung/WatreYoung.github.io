<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Anaconda常用命令</title>
    <link href="/2022/01/28/Anaconda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/01/28/Anaconda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="一、Anaconda常规用法"><a href="#一、Anaconda常规用法" class="headerlink" title="一、Anaconda常规用法"></a>一、Anaconda常规用法</h2><h3 id="所有提示命令"><a href="#所有提示命令" class="headerlink" title="所有提示命令"></a>所有提示命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">usage:  conda [-h] [-V] command ...<br>clean    #移除不用的包和缓存文件<br>config    #修改.condarc文件中的配置值，这里的.condarc文件类似于.vimrc或者.bashrc，用于配置conda的设置。模仿了git的配置命令，默认将配置写入到HOME文件夹下的.condarc文件中<br>create    #从一系列特定的包创建一个新的conda环境<br>help    #conda help文件<br>info    #显示当前conda的信息，包括路径，channels等<br>init    #初始化conda和shell的交互，实验性功能<br>install    #在特定的环境安装一系列包<br>list    #列出在一个conda环境中被linked(被关联)的包<br>package    #低等级的conda软件包实用程序？(实验性功能)不晓得有什么用<br>remove    #从一个特定的conda环境中移除一系列包<br>uninstall    #remove命令的别名<br>run    #在conda环境中跑一个可执行程序(实验性功能)<br>search    #找寻包并显示相关的信息。输入是MatchSpec，一种结构化查询语言。理解为一种约定的查询方式？<br>update    #把conda包更新到最新的兼容版本<br>upgrade    #update命令的别名<br></code></pre></td></tr></table></figure><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --add channels http://mirrors.ustc.edu.cn/anaconda/pkgs/main/<br>conda config --add channels http://mirrors.ustc.edu.cn/anaconda/pkgs/free/<br>conda config --add channels http://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels http://mirrors.ustc.edu.cn/anaconda/cloud/msys2/<br>conda config --add channels http://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/<br>conda config --add channels http://mirrors.ustc.edu.cn/anaconda/cloud/menpo/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/<br><br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/<br></code></pre></td></tr></table></figure><h3 id="查看源文件"><a href="#查看源文件" class="headerlink" title="查看源文件"></a>查看源文件</h3><p>在根目录下生成.condarc文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --set show_channel_urls yes<br></code></pre></td></tr></table></figure><h3 id="换回默认"><a href="#换回默认" class="headerlink" title="换回默认"></a>换回默认</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --remove-key channels<br></code></pre></td></tr></table></figure><h3 id="conda查询"><a href="#conda查询" class="headerlink" title="conda查询"></a>conda查询</h3><p>查看安装了哪些包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda list<br></code></pre></td></tr></table></figure><p>查看当前存在的虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda env list<br>conda info -e<br></code></pre></td></tr></table></figure><p>更新conda</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda update conda<br></code></pre></td></tr></table></figure><p>查询conda版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda --vesion<br></code></pre></td></tr></table></figure><p>查询conda命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda -h<br></code></pre></td></tr></table></figure><h3 id="conda创建新环境"><a href="#conda创建新环境" class="headerlink" title="conda创建新环境"></a>conda创建新环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda create -n new_env_name python=X.X <br></code></pre></td></tr></table></figure><h3 id="conda给环境重命名（先复制，再删除）"><a href="#conda给环境重命名（先复制，再删除）" class="headerlink" title="conda给环境重命名（先复制，再删除）"></a>conda给环境重命名（先复制，再删除）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 这是简化的命令形式</span><br>conda create -n conda-new --clone conda-old<br><span class="hljs-meta">#</span><span class="bash"> 下面是完整的命令形式</span><br>conda create --name conda-new --clone conda-old<br><br>conda remove -n conda-old --all<br></code></pre></td></tr></table></figure><h3 id="切换不同环境"><a href="#切换不同环境" class="headerlink" title="切换不同环境"></a>切换不同环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda activate env_name<br></code></pre></td></tr></table></figure><h3 id="关闭虚拟环境"><a href="#关闭虚拟环境" class="headerlink" title="关闭虚拟环境"></a>关闭虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda deactivate env_name<br></code></pre></td></tr></table></figure><h3 id="虚拟环境中安装额外的包"><a href="#虚拟环境中安装额外的包" class="headerlink" title="虚拟环境中安装额外的包"></a>虚拟环境中安装额外的包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install -n env_name [package]<br></code></pre></td></tr></table></figure><h3 id="删除环境中的某个包"><a href="#删除环境中的某个包" class="headerlink" title="删除环境中的某个包"></a>删除环境中的某个包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda remove --name env_name package_name<br></code></pre></td></tr></table></figure><h3 id="生成项目的运行环境要求"><a href="#生成项目的运行环境要求" class="headerlink" title="生成项目的运行环境要求"></a>生成项目的运行环境要求</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip freeze &gt; requirements.txt<br></code></pre></td></tr></table></figure><h3 id="Windows安装pytorch"><a href="#Windows安装pytorch" class="headerlink" title="Windows安装pytorch"></a>Windows安装pytorch</h3><h4 id="安装pytorch1-10-CUDA11-3"><a href="#安装pytorch1-10-CUDA11-3" class="headerlink" title="安装pytorch1.10+CUDA11.3"></a>安装pytorch1.10+CUDA11.3</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install pytorch torchvision torchaudio cudatoolkit=11.3<br></code></pre></td></tr></table></figure><h4 id="安装pytorch1-09-CUDA11-1"><a href="#安装pytorch1-09-CUDA11-1" class="headerlink" title="安装pytorch1.09+CUDA11.1"></a>安装pytorch1.09+CUDA11.1</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html<br></code></pre></td></tr></table></figure><h4 id="查看pytorch是否使用了GPU"><a href="#查看pytorch是否使用了GPU" class="headerlink" title="查看pytorch是否使用了GPU"></a>查看pytorch是否使用了GPU</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">is_gpu = torch.cuda.is_available()<br>gpu_nums = torch.cuda.device_count()<br>gpu_index = torch.cuda.current_device()<br><span class="hljs-built_in">print</span>(is_gpu,gpu_nums,gpu_index)<br><br>device_name = torch.cuda.get_device_name(gpu_index)<br><span class="hljs-built_in">print</span>(device_name)<br></code></pre></td></tr></table></figure><h3 id="Linux安装pytorch"><a href="#Linux安装pytorch" class="headerlink" title="Linux安装pytorch"></a>Linux安装pytorch</h3><h2 id="二、Jupyter-Notebook的虚拟环境配置"><a href="#二、Jupyter-Notebook的虚拟环境配置" class="headerlink" title="二、Jupyter Notebook的虚拟环境配置"></a>二、Jupyter Notebook的虚拟环境配置</h2><h3 id="在base环境下安装jupyter-notebook"><a href="#在base环境下安装jupyter-notebook" class="headerlink" title="在base环境下安装jupyter notebook"></a>在base环境下安装jupyter notebook</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install jupyter notebook<br></code></pre></td></tr></table></figure><h3 id="在base环境中安装ipykernel"><a href="#在base环境中安装ipykernel" class="headerlink" title="在base环境中安装ipykernel"></a>在base环境中安装ipykernel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install ipykernel<br></code></pre></td></tr></table></figure><h3 id="在目标环境中安装ipykernel"><a href="#在目标环境中安装ipykernel" class="headerlink" title="在目标环境中安装ipykernel"></a>在目标环境中安装ipykernel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 切换到目标环境</span><br>conda activate scanpy<br><span class="hljs-meta">#</span><span class="bash"> 安装ipykernel</span><br>conda install ipykernel<br></code></pre></td></tr></table></figure><h3 id="在base环境中将目标环境写入notebook的kernel中，打开jupyter-notebook。"><a href="#在base环境中将目标环境写入notebook的kernel中，打开jupyter-notebook。" class="headerlink" title="在base环境中将目标环境写入notebook的kernel中，打开jupyter notebook。"></a>在base环境中将目标环境写入notebook的kernel中，打开jupyter notebook。</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda activate base<br><br>python -m ipykernel install --user --name ML --display-name “Python ML”<br><br>jupyter notebook<br></code></pre></td></tr></table></figure><p><img src="/jupyter-kernel.png" alt="avatar"></p><h3 id="查看所有核心"><a href="#查看所有核心" class="headerlink" title="查看所有核心"></a>查看所有核心</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">jupyter kernelspec list<br></code></pre></td></tr></table></figure><h3 id="卸载指定核心"><a href="#卸载指定核心" class="headerlink" title="卸载指定核心"></a>卸载指定核心</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">jupyter kernelspec remove kernel_name<br></code></pre></td></tr></table></figure><h3 id="安装nbextension"><a href="#安装nbextension" class="headerlink" title="安装nbextension"></a>安装nbextension</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install jupyter_contrib_nbextensions<br>jupyter contrib nbextension install --user --skip-running-check<br></code></pre></td></tr></table></figure><h2 id="三、问题"><a href="#三、问题" class="headerlink" title="三、问题"></a>三、问题</h2><h3 id="1-解决ImportError-Keras-requires-TensorFlow-2-2-or-higher-Install-TensorFlow-via-pip-install-tensorflow"><a href="#1-解决ImportError-Keras-requires-TensorFlow-2-2-or-higher-Install-TensorFlow-via-pip-install-tensorflow" class="headerlink" title="1.解决ImportError: Keras requires TensorFlow 2.2 or higher. Install TensorFlow via pip install tensorflow"></a>1.解决ImportError: Keras requires TensorFlow 2.2 or higher. Install TensorFlow via pip install tensorflow</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install keras==2.2 -i https://pypi.douban.com/simple<br></code></pre></td></tr></table></figure><h3 id="2-“CondaHTTPError-HTTP-000-CONNECTION-FAILED-for-url-https-mirrors-tuna-tsinghua-edu-cn-anaconda-pkgs-main-win-64-current-repodata-json”"><a href="#2-“CondaHTTPError-HTTP-000-CONNECTION-FAILED-for-url-https-mirrors-tuna-tsinghua-edu-cn-anaconda-pkgs-main-win-64-current-repodata-json”" class="headerlink" title="2.“CondaHTTPError: HTTP 000 CONNECTION FAILED for url https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/current_repodata.json”"></a>2.“CondaHTTPError: HTTP 000 CONNECTION FAILED for url <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/current_repodata.json">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/current_repodata.json</a>”</h3><p><strong>参考该<a href="https://www.cnblogs.com/tianlang25/p/12433025.html">博客</a></strong></p><ol><li>恢复Anaconda的源为默认<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --remove-key channels<br></code></pre></td></tr></table></figure></li><li>恢复Anaconda源为清华<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br></code></pre></td></tr></table></figure></li><li>若仍有问题，进入“C:\Users\Administrator”，打开“.condarc”，添加win64<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssl_verify: true<br>show_channel_urls: true<br><br>channels:<br>  - http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64<br></code></pre></td></tr></table></figure><h3 id="3-ImportError-No-module-named-‘keras-contrib’"><a href="#3-ImportError-No-module-named-‘keras-contrib’" class="headerlink" title="3.ImportError: No module named ‘keras_contrib’"></a>3.ImportError: No module named ‘keras_contrib’</h3>导入keras_contrib，会出现这个错误<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> keras_contrib.layers.normalization <span class="hljs-keyword">import</span> InstanceNormalization<br></code></pre></td></tr></table></figure>但是直接使用pip安装会存在问题<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ERROR: Could not find a version that satisfies the requirement keras_contrib (from versions: none)<br>ERROR: No matching distribution found for keras_contrib<br></code></pre></td></tr></table></figure>因此需要使用github进行安装，命令如下：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install git+https://www.github.com/keras-team/keras-contrib.git<br></code></pre></td></tr></table></figure><h3 id="4-ImportError-Failed-to-import-pydot-Please-install-pydot-For-example-with-pip-install-pydot"><a href="#4-ImportError-Failed-to-import-pydot-Please-install-pydot-For-example-with-pip-install-pydot" class="headerlink" title="4.ImportError: Failed to import pydot. Please install pydot. For example with pip install pydot"></a>4.ImportError: Failed to import <code>pydot</code>. Please install <code>pydot</code>. For example with <code>pip install pydot</code></h3>使用keras中的plot_model报错，可以使用如下命令解决问题<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install graphviz<br>conda install pydotplus<br>pip install pydot<br></code></pre></td></tr></table></figure>或者按照<a href="https://stackoverflow.com/questions/36886711/keras-runtimeerror-failed-to-import-pydot-after-installing-graphviz-and-pyd">Stack Overflow</a>的方法去操作<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install graphviz <br>pip install git+https://github.com/nlhepler/pydot.git<br></code></pre></td></tr></table></figure></li></ol><h3 id="5-Linux每次创建新终端就会进入base环境"><a href="#5-Linux每次创建新终端就会进入base环境" class="headerlink" title="5. Linux每次创建新终端就会进入base环境"></a>5. Linux每次创建新终端就会进入base环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda config --set auto_activate_base false<br></code></pre></td></tr></table></figure><h2 id="四、在Ubuntu-20-4上安装（卸载）Anaconda"><a href="#四、在Ubuntu-20-4上安装（卸载）Anaconda" class="headerlink" title="四、在Ubuntu 20.4上安装（卸载）Anaconda"></a>四、在Ubuntu 20.4上安装（卸载）Anaconda</h2><h3 id="4-1-安装"><a href="#4-1-安装" class="headerlink" title="4.1 安装"></a>4.1 安装</h3><ol><li>首先去<a href="https://www.anaconda.com/products/individual">Anaconda官网</a>下载最新的安装包：</li></ol><p><img src="%5CAnaconda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.assets%5Cimage-20211226151528147.png" alt="image-20211226151528147"></p><ol start="2"><li>cd命令进入下载文件的所在目录进行安装，注意<strong>安装过程中会让选择安装路径和添加环境变量的选项</strong>：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash Anaconda3-5.2.0-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p><img src="%5Cimg%5CAnaconda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.assets%5Cimage-20211226152306273.png" alt="image-20211226152306273"></p><p><img src="%5Cimg%5Cdefault1.png" alt="image-20211226152306273"></p><p><img src="%5CAnaconda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.assets%5Cimage-20211226152506309.png" alt="image-20211226152506309"></p><h3 id="4-2-卸载"><a href="#4-2-卸载" class="headerlink" title="4.2 卸载"></a>4.2 卸载</h3><ol><li>删除Anaconda3文件夹<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -rf ~/anaconda3<br></code></pre></td></tr></table></figure></li><li>删除Anaconda配置的环境变量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo gedit ~/.bashrc<br></code></pre></td></tr></table></figure><ol start="3"><li>更新环境变量，使更改生效<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> added by Anaconda3 installer</span><br>export PATH=&quot;/home/Vselfdom/anaconda3/bin:$PATH&quot;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Anaconda</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Anaconda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/17/hello-world/"/>
    <url>/2021/01/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
